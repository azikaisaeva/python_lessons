# 1. Что такое словарь в Python?
#    - Словарь — это структура данных, которая хранит пары "ключ: значение".
#    - Ключи уникальны и неизменяемы.
#    - Значения могут быть любыми типами данных.

# 2. Создание словаря:
#    - Пустой словарь:
#         my_dict = {}
#         dictionary = dict()
#    - Заполненный словарь:
student = {
     # "name": "Алексей",
     # 2: 33,
     # True: [1, 2, 3],
     # "status": True,
     # "age": 21
}

# 3. Обращение к значениям по ключу:
# print(student["name"])  # Алексей
# # print(student["age2"])  # keyError ключ не существует в словаре
# print(student.get("city", "Москва"))
# print(student.get("status"))
# print(student.get("status2"))

# 4. Методы словарей:
#    - .get(key, default) — безопасное получение значения.
#    - .keys() — возвращает все ключи словаря.
#    - .values() — возвращает все значения.
#    - .items() — возвращает пары (ключ, значение).
#    - .update() — обновляет словарь.
#    - .pop(key[, default]) — удаляет ключ и возвращает его значение.
#    - .clear() — очищает словарь.

# print(student.keys())  # возвращает все ключи
# print(student.values())  # возвращает все значения
# print(student.items())  # возвращает все пары (ключ, значение)
# student.update({"name": "vlad", "city": "Bishkek"})
# print(student)
#
# name = student.pop("name")  # удаляет пару по ключу и возвращает значение
# print(name)
# print(student)
#
# student.clear()
# print(student)
#
#
# 5. Добавление и изменение элементов:
# student["age"] = 22  # Изменение значения
# student["grade"] = "A"  # Добавление новой пары
# print(student)
#
# # 6. Удаление элементов:
# student.pop("city")  # Удаляет пару с ключом 'city'
# del student["name"]  # Удаляет ключ 'name'
#
# # 7. Проверка наличия ключа:
# if "name" in student:
#     print("Ключ 'name' есть в словаре!")


# Ознакомительные задачи:
# 1. Создай словарь, содержащий информацию о книге (название, автор, год издания). Выведи автора книги.
# book = {
#      "name": "Python",
#      "author": "Dilmurat",
#      "published_year": 2025
# }
# print(book["author"])
# print(book.get("author"))
# 2. Создай пустой словарь и добавь в него три ключа: имя, возраст, город.
# empty_key = {}
# empty_key['name'] = "Aziza"
# empty_key["age"] = 27
# empty_key["city"] = "Tashkent"
#
# print(empty_key)
# 3. Удали ключ "город" из словаря и выведи результат.
# city_dict= {
#      "City": "Tashkent"
# }
# city_dict.pop("City")
# print(city_dict)

# 4. Проверь, есть ли ключ "телефон" в словаре и выведи сообщение об этом.
#    if "telephone" in empty_key:
#      print("Ключ 'telephone' есть в словаре")
#    else:
#      print("Ключа 'telephone' Нет в словаре")

# 5. Измени значение ключа "возраст" на 30.
# empty_key["age"] = 30
# print(empty_key)

# 6. Создай словарь с именами друзей и их любимыми цветами. Выведи любимый цвет одного из друзей.
# friends_favourite_colour = {
#      "Ekaterina": "pink",
#      "Zoda": "red"
# }
# print(friends_favourite_colour.get("Zoda"))
# 7. Создай словарь студентов и их оценок. Выведи всех студентов и их оценки.
# grades = {
#      "Aziza": 5,
#      "Kamilla": 4,
#      "Zoda": 4
# }
# print(grades)
# 8. Используя .get(), получи значение несуществующего ключа с выводом "Нет такого ключа".
# print(empty_key.get("city2", "Нет такого ключа"))

# 9. Создай словарь с продуктами и их ценами. Добавь новый продукт и выведи обновленный словарь.
# items = {
#      "cucumber": 3.15,
#      "tomato": 200,
#      "bread": 14
# }
# items.update({"onion": 20})
# print(items)

# 10. Подсчитай количество ключей в словаре.
# print(len(items.keys()))

# 11. Создай словарь с номерами автомобилей и их владельцами. Выведи владельца одного из автомобилей.
car_numbers = {
     "AA 565": "Алексей",
     "BA 787": "Rustam",
     "CA 989": "Ekaterina"
}
# print(car_numbers["AA 565"])

# 12. Добавь нового владельца и автомобиль в словарь.
# car_numbers.update({"CD 767": "Zoda"})
# print(car_numbers)

# 13. Удали информацию о владельце автомобиля по номеру.
# car_numbers.pop("AA 565")
# print(car_numbers)

# 14. Используй метод .items() для вывода всех пар "ключ: значение".

# print(car_numbers.items())

# 15. Используй метод .values() для получения всех значений словаря.
# print(car_numbers.values())

# 16. Создай словарь с названиями стран и их столицами. Выведи столицу указанной страны.
capitals = {
     "Uzbekistan": "Tashkent",
     "Turkey": "Ankara",
     "Australia": "Sydney",
     "Russia": "Moscow"
}
# print(capitals.values())

# 17. Измени название столицы одной из стран.

# capitals ["Turkey"] = "Istanbul"
# print(capitals)

# 18. Проверь наличие страны в словаре перед получением её столицы.
# if "Uzbekistan" in capitals:
#      print("Uzbekistan есть в списке")

# 19. Используй метод .update() для объединения двух словарей.
# capitals.update(car_numbers)
# print(capitals)

# 20. Создай словарь с логинами и паролями пользователей. Проверь правильность пароля для заданного логина.
# users = {
#      "aziza": 858,
#      "foomee": "60gb",
#      "viewsonic": "500k"
# }
# login= input("Введите ваш логин: ")
# password = input("Введите ваш пароль: ")
# if users.get(login) == password:
#      print("Пароль верный")
# else:
#      print("Логин или пароль не верный")

# 21. Создай словарь с днями недели и их порядковыми номерами. Выведи номер среды.
calendar = {
     "Monday" : 1,
     "Tuesday": 2,
     "Wednesday": 3,
     "Thursday": 4,
     "Friday": 5,
     "Saturday": 6,
     "Sunday": 7
}
# print(calendar["Wednesday"])

# 22. Проверь, есть ли в словаре ключ "воскресенье".
# if "Sunday" in calendar:
#      print("В словаре есть среда")

# 23. Создай словарь с курсами валют и их значениями. Получи значение курса доллара.
currency = {
     "USD": 12900,
     "EUR": 14000,
     "TRL": 9000
}
# print(currency["USD"])

# 24. Добавь новую валюту и её курс.
# currency.update({"IDR": 1600})
# print(currency)

# 25. Создай словарь с любимыми фильмами друзей. Выведи фильмы одного из друзей.
# films = {
#      "Zoda": 'Клятва',
#      "Ekaterina": "Великий Гэтсби",
#      "Kamilla": "Голодон"
# # }
# print(films(["Zoda"]))
# 26. Измени фильм в словаре для одного из друзей.

# 27. Создай словарь с наименованиями товаров и их количеством. Уменьши количество одного из товаров.

# items = {
#      "pads": 5,
#      "carrot": 4,
#      "watermelon": 1,
#      "lemon": 7
# }
#
# items ["pads"] -= 2
# print(items)
# 28. Используй метод .clear() для очистки словаря.

# 29. Создай словарь с именами сотрудников и их должностями. Выведи должность указанного сотрудника.
# 30. Удали информацию о сотруднике по имени.
# 31. Создай словарь с предметами и их баллами. Посчитай общую сумму баллов.
# 32. Создай словарь с животными и их звуками. Выведи звук указанного животного.
# 33. Измени звук одного из животных.
# 34. Создай словарь с товарами и их ценами. Увеличь цену одного из товаров на 10%.
# 35. Создай словарь с именами студентов и их возрастом. Выведи возраст студента с заданным именем.
# 36. Проверь наличие студента в словаре перед выводом его возраста.
# 37. Создай словарь с названиями городов и численностью населения. Увеличь численность одного из городов.
# 38. Используй метод .pop() для удаления ключа и получения его значения.
# 39. Создай словарь с играми и их рейтингами. Выведи игру с наивысшим рейтингом.
# 40. Создай словарь с контактами и их телефонами. Выведи телефон указанного контакта.


